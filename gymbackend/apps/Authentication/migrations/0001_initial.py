# Generated by Django 5.2 on 2025-07-28 05:18

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='WebAuthnCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credential_id', models.CharField(max_length=255)),
                ('public_key', models.TextField()),
                ('sign_count', models.PositiveIntegerField(default=0)),
                ('rp_id', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('member', 'Member'), ('trainer', 'Trainer'), ('admin', 'Admin')], default='member', max_length=10, verbose_name='User Role')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True, verbose_name='Email Address')),
                ('username', models.CharField(blank=True, help_text='Optional. 4-150 characters.', max_length=150, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(4)], verbose_name='Username')),
                ('first_name', models.CharField(help_text='Required. 150 characters or fewer.', max_length=150, verbose_name='First Name')),
                ('last_name', models.CharField(help_text='Required. 150 characters or fewer.', max_length=150, verbose_name='Last Name')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email Notifications')),
                ('whatsapp_notifications', models.BooleanField(default=False, verbose_name='WhatsApp Notifications')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-date_joined'],
            },
        ),
    ]
